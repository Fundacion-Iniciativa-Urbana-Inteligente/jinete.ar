import React, { useState, useEffect } from "react";
import { MapContainer, Marker, Popup, TileLayer } from "react-leaflet";
import axios from "axios";

const defaultPosition = [-27.366666666667, -55.893];

export default function Mapa() {
  const [bicycles, setBicycles] = useState([]);
  const [selectedBike, setSelectedBike] = useState(null);
  const [unlockToken, setUnlockToken] = useState("");
  const [message, setMessage] = useState("");

  useEffect(() => {
    const fetchBicycles = async () => {
      try {
        const response = await axios.get("/api/bicycles");
        const validBicycles = response.data.filter(
          (bike) =>
            bike.lat !== undefined &&
            bike.lng !== undefined &&
            !isNaN(bike.lat) &&
            !isNaN(bike.lng)
        );
        setBicycles(validBicycles);
      } catch (error) {
        console.error("Error al obtener bicicletas:", error);
      }
    };

    fetchBicycles();
  }, []);

  const handleUnlock = async () => {
    if (!selectedBike || !unlockToken) {
      setMessage("Por favor selecciona una bicicleta e ingresa el token.");
      return;
    }

    try {
      const response = await axios.post("/api/unlock", {
        imei: selectedBike.imei,
        enteredToken: unlockToken,
      });

      if (response.status === 200) {
        setMessage(response.data.message);
      } else {
        setMessage(response.data.message || "Error desconocido.");
      }
    } catch (error) {
      console.error("Error al intentar desbloquear:", error);
      setMessage("Error al intentar desbloquear.");
    }
  };

  return (
    <div id="mapa">
      <MapContainer
        center={defaultPosition}
        zoom={15}
        style={{ height: "70vh", width: "100%" }}
      >
        <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />
        {bicycles.map((bike) => (
          <Marker
            key={bike.imei}
            position={[bike.lat, bike.lng]}
            eventHandlers={{
              click: () => setSelectedBike(bike),
            }}
          >
            <Popup>
              <strong>{bike.deviceName || "Sin nombre"}</strong>
              <br />
              Bater√≠a: {bike.batteryPowerVal}%
            </Popup>
          </Marker>
        ))}
      </MapContainer>

      <div style={{ marginTop: "20px", padding: "10px" }}>
        <h3>Desbloquear Bicicleta</h3>
        <p>
          {selectedBike
            ? `Bicicleta seleccionada: ${selectedBike.deviceName || "Sin nombre"}`
            : "Selecciona una bicicleta en el mapa para continuar."}
        </p>
        <input
          type="text"
          value={unlockToken}
          onChange={(e) => setUnlockToken(e.target.value)}
          placeholder="Ingresa el token de desbloqueo"
          style={{
            padding: "10px",
            width: "80%",
            marginBottom: "10px",
          }}
        />
        <button
          onClick={handleUnlock}
          style={{
            padding: "10px",
            backgroundColor: "#007bff",
            color: "#fff",
            border: "none",
            borderRadius: "5px",
            cursor: "pointer",
          }}
        >
          Desbloquear
        </button>
        <p style={{ marginTop: "10px", color: "red" }}>{message}</p>
      </div>
    </div>
  );
}
